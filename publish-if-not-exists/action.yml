name: Publish If Not Exists
description: Publishes a local package if it doesn't already exist on NPM Registry

inputs:
  path:
    description: Path to the package to publish
    required: true

  token:
    description: NPM access token. Omit to use OIDC login (Trusted Publisher)
    required: false
    default: ''

  package_manager:
    description: Package manager to use for publishing. Can be 'npm' or 'pnpm'
    required: false
    default: 'npm'

runs:
  using: 'composite'
  steps:
    - name: Install JQ
      shell: bash
      run: sudo apt-get install jq

    - name: '[OIDC] Check whether Node needs to be updated'
      if: inputs.token == ''
      shell: bash
      run: |
        current=$(node --version | sed 's/v//')
        
        if [ "$(printf '%s\n' "22.9.0" "$current" | sort -V | head -n1)" = "22.9.0" ]; then
          echo "Node $current is sufficient for npm 11.5.1"
        else
          echo "Node $current is below 22.9.0, upgrading"
          echo "UPGRADE_NODE=true" >> $GITHUB_ENV
        fi

    - name: '[OIDC] Install Node 22.x'
      if: inputs.token == '' && env.UPGRADE_NODE == 'true'
      uses: actions/setup-node@v6
      with:
        node-version: '^22.9.0'
        registry-url: 'https://registry.npmjs.org'

    - name: '[OIDC] Ensure NPM 11.5.1+ is installed'
      if: inputs.token == ''
      shell: bash
      run: |
        current_npm=$(npm --version)
        
        if [ "$(printf '%s\n' "11.5.1" "$current_npm" | sort -V | head -n1)" = "11.5.1" ]; then
          echo "npm $current_npm is sufficient"
        else
          echo "npm $current_npm is below 11.5.1, upgrading"
          npm install -g npm@^11.5.1
        fi

    - name: '[API Token] Login'
      if: inputs.token != ''
      shell: bash
      run: |
        echo "//registry.npmjs.org/:_authToken=${{ inputs.token }}" > ~/.npmrc

    - name: Publish
      shell: bash
      run: |
        file_content=$(cat ${{ inputs.path }}/package.json)

        name=$(echo $file_content | jq -r ".name")
        version=$(echo $file_content | jq -r ".version")

        echo "name: $name"
        echo "version: $version"

        package_ref="$name@$version"

        if [[ "${{ inputs.package_manager }}" != "pnpm" && "${{ inputs.package_manager }}" != "npm" ]]; then
          echo "Unsupported package manager: ${{ inputs.package_manager }}"
          exit 1
        fi

        if npm view $package_ref > /dev/null 2>&1 ; then
          echo "Package $package_ref already published"
          exit 0
        fi


        echo "Publishing version $package_ref"
        echo "Using ${{ inputs.package_manager }} as package manager"

        cd ${{ inputs.path }}
        cmd="${{ inputs.package_manager }} publish --access public"

        if [ "${{ inputs.package_manager }}" = "pnpm" ]; then
          cmd="$cmd --publish-branch ${{ github.ref_name }}"
        fi

        eval "$cmd"
