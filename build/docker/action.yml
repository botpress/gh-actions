name: Docker to ECR
description: Push Docker image to ECR
inputs:
  repository:
    description: "repository name created inside ecr"
    required: true
  work-dir:
    description: "working directory where to build the Dockerfile"
    required: true
    default: ./
  docker-context:
    description: "Docker context for the build"
    required: true
    default: "."
  dockerfile:
    description: "path to Dockerfile"
    required: true
    default: Dockerfile
  aws-access-key-id:
    description: "aws access key id"
    required: true
  aws-secret-access-key:
    description: "aws secret access key"
    required: true
  aws-region:
    description: "aws region"
    required: true
    default: us-east-1

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      id: ecr
    - name: Build, tag, and push image to Amazon ECR
      shell: bash
      env:
        ECR_REPOSITORY: ${{ inputs.repository }}
        ECR_REGISTRY: ${{ steps.ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        aws --version
        aws ecr create-repository --repository-name $ECR_REPOSITORY || true
        aws ssm get-parameter --name '/cloud/container-registry/ecr-policy-document' --query 'Parameter.Value' | jq -r > repository-policy.json
        aws ecr set-repository-policy --repository-name $ECR_REPOSITORY --policy-text file://repository-policy.json &> /dev/null
        cd ${{ inputs.work-dir }}
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ${{ inputs.dockerfile }} ${{ inputs.docker-context }}
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
